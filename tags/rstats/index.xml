<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rstats | Pritika Dasgupta</title>
    <link>https://pritikadasgupta.github.io/tags/rstats/</link>
      <atom:link href="https://pritikadasgupta.github.io/tags/rstats/index.xml" rel="self" type="application/rss+xml" />
    <description>rstats</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-gb</language><copyright>Â© 2020 Pritika Dasgupta.</copyright><lastBuildDate>Tue, 01 Dec 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://pritikadasgupta.github.io/images/logo.svg</url>
      <title>rstats</title>
      <link>https://pritikadasgupta.github.io/tags/rstats/</link>
    </image>
    
    <item>
      <title>Advent of Code 2020</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day2/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day2/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://adventofcode.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Advent of Code&lt;/a&gt; is an advent-style coding challenge, where there is a two-part coding/data challenge posted for each day in December until Christmas Day (December 1st to December 25th).&lt;/p&gt;
&lt;p&gt;I will be attempting each day using R (mostly), Python (sometimes), and MATLAB (rarely) &amp;ndash; which are my three mainstay languages for data science.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve been blogging about each challenge and my approaches to each of these; feel free to scroll over and go to each challenge directly on this page:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Challenge&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day1&#34;&gt;Day 1: Report Repair&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day2&#34;&gt;Day 2: Password Philosophy&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day3&#34;&gt;Day 3: Toboggan Trajectory&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day4&#34;&gt;Day 4: Passport Processing&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day5&#34;&gt;Day 5: Binary Boarding&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day6&#34;&gt;Day 6: Custom Customs&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day7&#34;&gt;Day 7: Handy Haversacks&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day8&#34;&gt;Day 8: Handheld Halting&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day9&#34;&gt;Day 9: Encoding Error&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day10&#34;&gt;Day 10: Adapter Array&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day11&#34;&gt;Day 11: Seating System&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day12&#34;&gt;Day 12: Rain Risk&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day13&#34;&gt;Day 13: Shuttle Search&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day14&#34;&gt;Day 14: Docking Data&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day15&#34;&gt;Day 15: Rambunctious Recitation&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day16&#34;&gt;Day 16: Ticket Translation&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day17&#34;&gt;Day 17: Conway Cubes&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day18&#34;&gt;Day 18: Operation Order&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day19&#34;&gt;Day 19: Monster Messages&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day20&#34;&gt; Day 20: Jurassic Jigsaw&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day21&#34;&gt; Day 21: Allergen Assessment&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day22&#34;&gt; Day 22: Crab Combat&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day23&#34;&gt; Day 23: Crab Cups&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day24&#34;&gt; Day 24: Lobby Layout&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day25&#34;&gt; Day 25: Combo Breaker&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
&lt;a id=&#39;day1&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-1-report-repairhttpsadventofcodecom2020day1&#34;&gt;Day 1: 
&lt;a href=&#34;https://adventofcode.com/2020/day/1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Report Repair&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day1/exercise1.input.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 1 data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-two-numbers&#34;&gt;Part 1: Two numbers&lt;/h2&gt;
&lt;p&gt;The challenge was to find two numbers from a list that sum to 2020, then to report their product.&lt;/p&gt;
&lt;p&gt;At first, I wanted to solve this problem any which way, and I didn&amp;rsquo;t really care for time complexity. So my first solution was (incomplete code snippet):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xval&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;enumerate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ar_y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yval&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;enumerate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar_y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xval&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xval&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yval&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;INPUT_PATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
	&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2020&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above solution was of time complexity: O(n^2), which was not ideal.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# sort the list ar&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# min index&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#max index&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This one (above) was of O(nlogn) time complexity with a space complexity of O(1).&lt;/p&gt;
&lt;p&gt;So how do I come up with a solution that&amp;rsquo;s both efficient in terms of time and space complexity? Two words&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;list-comprehensions&#34;&gt;List Comprehensions&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Thus, my complete code (and by complete, I mean &amp;ldquo;composable,&amp;rdquo; like my partner says&amp;hellip;. so it can be executed by anyone via the Terminal given you&amp;rsquo;ve set the input and output paths):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/python3&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;math&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;OUTPUT_PATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;INPUT_PATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;What do you want your sum to be? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;part-2-three-numbers&#34;&gt;Part 2: Three numbers&lt;/h2&gt;
&lt;p&gt;The challenge was to find THREE numbers from a list that sum to 2020, then to report their product. We can take our previous solution and tweak it a little to add another variable.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/python3&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;math&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;({(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;OUTPUT_PATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;INPUT_PATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;What do you want your sum to be? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;
&lt;a id=&#39;day2&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-2-password-philosophyhttpsadventofcodecom2020day2&#34;&gt;Day 2: 
&lt;a href=&#34;https://adventofcode.com/2020/day/2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Password Philosophy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day2/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 2 data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day3&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-3-toboggan-trajectoryhttpsadventofcodecom2020day3&#34;&gt;Day 3: 
&lt;a href=&#34;https://adventofcode.com/2020/day/3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Toboggan Trajectory&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day3/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 3 data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-1&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day4&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-4-passport-processinghttpsadventofcodecom2020day4&#34;&gt;Day 4: 
&lt;a href=&#34;https://adventofcode.com/2020/day/4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Passport Processing&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day4/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 4 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day4/exercise4.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 4 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-2&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day5&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-5-binary-boardinghttpsadventofcodecom2020day5&#34;&gt;Day 5: 
&lt;a href=&#34;https://adventofcode.com/2020/day/5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Binary Boarding&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day5/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 5 data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-3&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day6&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-6-custom-customshttpsadventofcodecom2020day6&#34;&gt;Day 6: 
&lt;a href=&#34;https://adventofcode.com/2020/day/6&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Custom Customs&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day6/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 6 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day6/exercise6.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 6 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-4&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day7&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-7-handy-haversackshttpsadventofcodecom2020day7&#34;&gt;Day 7: 
&lt;a href=&#34;https://adventofcode.com/2020/day/7&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Handy Haversacks&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day7/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 7 data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-5&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day8&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-8-handheld-haltinghttpsadventofcodecom2020day8&#34;&gt;Day 8: 
&lt;a href=&#34;https://adventofcode.com/2020/day/8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Handheld Halting&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day8/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 8 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day8/exercise8.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 8 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-6&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day9&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-9-encoding-errorhttpsadventofcodecom2020day9&#34;&gt;Day 9: 
&lt;a href=&#34;https://adventofcode.com/2020/day/9&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Encoding Error&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day9/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 9 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day9/exercise9.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 9 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-7&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day10&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-10-adapter-arrayhttpsadventofcodecom2020day10&#34;&gt;Day 10: 
&lt;a href=&#34;https://adventofcode.com/2020/day/10&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Adapter Array&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day10/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 10 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day10/exercise10.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 10 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-8&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day11&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-11-seating-systemhttpsadventofcodecom2020day11&#34;&gt;Day 11: 
&lt;a href=&#34;https://adventofcode.com/2020/day/11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Seating System&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day11/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 11 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day11/exercise11.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 11 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-9&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day12&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-12-rain-riskhttpsadventofcodecom2020day12&#34;&gt;Day 12: 
&lt;a href=&#34;https://adventofcode.com/2020/day/12&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rain Risk&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day12/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 12 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day12/exercise12.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 12 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-10&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day13&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-13-shuttle-searchhttpsadventofcodecom2020day13&#34;&gt;Day 13: 
&lt;a href=&#34;https://adventofcode.com/2020/day/13&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shuttle Search&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day13/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 13 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day13/exercise13.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 13 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-11&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day14&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-14-docking-datahttpsadventofcodecom2020day14&#34;&gt;Day 14: 
&lt;a href=&#34;https://adventofcode.com/2020/day/14&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Docking Data&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day14/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 14 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day14/exercise14.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 14 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-12&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day15&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-15-rambunctious-recitationhttpsadventofcodecom2020day15&#34;&gt;Day 15: 
&lt;a href=&#34;https://adventofcode.com/2020/day/15&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Rambunctious Recitation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day15/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 15 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day15/exercise15.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 15 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-13&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day16&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-16-ticket-translationhttpsadventofcodecom2020day16&#34;&gt;Day 16: 
&lt;a href=&#34;https://adventofcode.com/2020/day/16&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ticket Translation&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day16/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 16 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day16/exercise16.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 16 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-14&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day17&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-17-conway-cubeshttpsadventofcodecom2020day17&#34;&gt;Day 17: 
&lt;a href=&#34;https://adventofcode.com/2020/day/17&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Conway Cubes&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day17/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 17 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day17/exercise17.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 17 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-15&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day18&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-18-operation-orderhttpsadventofcodecom2020day18&#34;&gt;Day 18: 
&lt;a href=&#34;https://adventofcode.com/2020/day/18&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Operation Order&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day18/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 18 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day18/exercise18.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 18 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-16&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day19&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-19-monster-messageshttpsadventofcodecom2020day19&#34;&gt;Day 19: 
&lt;a href=&#34;https://adventofcode.com/2020/day/19&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Monster Messages&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day19/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 19 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day19/exercise19.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 19 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-17&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day20&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-20-jurassic-jigsawhttpsadventofcodecom2020day20&#34;&gt;Day 20: 
&lt;a href=&#34;https://adventofcode.com/2020/day/20&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Jurassic Jigsaw&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day20/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 20 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day20/exercise20.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 20 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-18&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day21&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-21-handheld-haltinghttpsadventofcodecom2121day21&#34;&gt;Day 21: 
&lt;a href=&#34;https://adventofcode.com/2121/day/21&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Handheld Halting&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2121/data/Day21/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 21 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2121/data/Day21/exercise21.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 21 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-19&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day22&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-22-handheld-haltinghttpsadventofcodecom2222day22&#34;&gt;Day 22: 
&lt;a href=&#34;https://adventofcode.com/2222/day/22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Handheld Halting&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2222/data/Day22/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 22 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2222/data/Day22/exercise22.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 22 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-20&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day23&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-23-handheld-haltinghttpsadventofcodecom2323day23&#34;&gt;Day 23: 
&lt;a href=&#34;https://adventofcode.com/2323/day/23&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Handheld Halting&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2323/data/Day23/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 23 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2323/data/Day23/exercise23.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 23 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-21&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day24&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-24-handheld-haltinghttpsadventofcodecom2424day24&#34;&gt;Day 24: 
&lt;a href=&#34;https://adventofcode.com/2424/day/24&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Handheld Halting&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2424/data/Day24/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 24 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2424/data/Day24/exercise24.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 24 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-22&#34;&gt;Part 1:&lt;/h2&gt;
&lt;p&gt;
&lt;a id=&#39;day25&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-25-handheld-haltinghttpsadventofcodecom2525day25&#34;&gt;Day 25: 
&lt;a href=&#34;https://adventofcode.com/2525/day/25&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Handheld Halting&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2525/data/Day25/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 25 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2525/data/Day25/exercise25.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 25 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-23&#34;&gt;Part 1:&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;I&amp;rsquo;ve completed all 25 challenges of Advent of Code. However, I am slow to put up my thought process throughout the whole thing. This post will be updated as I code/work/blog through the rest of the challenges.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tidy Tuesday</title>
      <link>https://pritikadasgupta.github.io/project/tidy-tuesday/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/project/tidy-tuesday/</guid>
      <description>&lt;p&gt;I would like to participate in 
&lt;a href=&#34;https://github.com/rfordatascience/tidytuesday&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;#TidyTuesday&lt;/a&gt; more, and I&amp;rsquo;m hoping that publishing my work on my website (and on twitter) will help me do just that.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
