<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code | Pritika Dasgupta</title>
    <link>https://pritikadasgupta.github.io/tags/code/</link>
      <atom:link href="https://pritikadasgupta.github.io/tags/code/index.xml" rel="self" type="application/rss+xml" />
    <description>code</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-gb</language><copyright>Â© 2020 Pritika Dasgupta.</copyright><lastBuildDate>Wed, 09 Dec 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://pritikadasgupta.github.io/images/logo.svg</url>
      <title>code</title>
      <link>https://pritikadasgupta.github.io/tags/code/</link>
    </image>
    
    <item>
      <title>Advent of Code 2020 Day 9</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day9/</link>
      <pubDate>Wed, 09 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day9/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 2</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day2/</link>
      <pubDate>Wed, 02 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day2/</guid>
      <description>&lt;p&gt;Today&amp;rsquo;s Advent of Code is all about passwords and using R!! The only (&lt;em&gt;laughs&lt;/em&gt; only) library I used was tidyverse, particularly for its magrittr pipe and separate functions. My goal is to use a combo of tidyverse and base R in my solutions so I&amp;rsquo;m not particularly dependent on tidyverse solutions, since tidyverse (as great as it is) is slowly morphing into something bigger than R itself (more on that later! probably in another blog post).&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Challenge&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day2&#34;&gt;Day 2: Password Philosophy&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;day-2-password-philosophyhttpsadventofcodecom2020day2&#34;&gt;Day 2: 
&lt;a href=&#34;https://adventofcode.com/2020/day/2&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Password Philosophy&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The problem asks you to go through a list of password policies and passwords, 
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day2/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;my day 2 data&lt;/a&gt;, and then we have to figure out which passwords are valid according to their policies.&lt;/p&gt;
&lt;h2 id=&#34;part-1-valid-passwords&#34;&gt;Part 1: Valid Passwords&lt;/h2&gt;
&lt;h2 id=&#34;load-in-data&#34;&gt;Load in Data:&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34; data-lang=&#34;{r}&#34;&gt;library(tidyverse)
#Use this if you&#39;re running from the command line:
# df &amp;lt;- read.table(file(&amp;quot;stdin&amp;quot;), header = FALSE, sep = &amp;quot; &amp;quot;)

#Use this if you&#39;re opening this repo as a R project, using relative paths:
df &amp;lt;- read.table(&amp;quot;2020/Day2/input&amp;quot;, header = FALSE, sep = &amp;quot; &amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;My first instinct was to clean up the dataset I just created.&lt;/p&gt;
&lt;p&gt;First, I get min and max: lowest and highest number of times.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34; data-lang=&#34;{r}&#34;&gt;df1 &amp;lt;- df %&amp;gt;% separate(V1, c(&amp;quot;min&amp;quot;, &amp;quot;max&amp;quot;)) 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, a given letter must appear for the password to be valid, right? So, I get rid of the &amp;ldquo;:&amp;rdquo; for the letter.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34; data-lang=&#34;{r}&#34;&gt;df2 &amp;lt;- df1 %&amp;gt;% separate(V2, c(&amp;quot;letter&amp;quot;, NA))
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then I created a function to count how many times a character occurs in a string:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34; data-lang=&#34;{r}&#34;&gt;countLetter &amp;lt;- function(x){
  char &amp;lt;- x[1]
  s &amp;lt;- x[2]
  s2 &amp;lt;- gsub(char,&amp;quot;&amp;quot;,s)
  return (nchar(s) - nchar(s2))
}

df2$count &amp;lt;- apply(df2[,3:4], 1, countLetter)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then another function to check if a password is valid:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34; data-lang=&#34;{r}&#34;&gt;validPassword &amp;lt;- function(x){
  x &amp;lt;- as.numeric(x)
  if(x[5] &amp;lt;= x[2] &amp;amp;&amp;amp; x[5]&amp;gt;= x[1]){
    return(1)
  }else{
    return(0)
  }
}

df2$valid &amp;lt;- apply(df2, 1, validPassword)

sum(df2$valid) #part 1 solution
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;part-2-password-policies&#34;&gt;Part 2: Password Policies&lt;/h2&gt;
&lt;p&gt;Part 2 asks us to interpret the password policies in a new way:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-{r}&#34; data-lang=&#34;{r}&#34;&gt;df3 &amp;lt;- df2[,1:4] #new dataframe

validPassword2 &amp;lt;- function(x){
  string &amp;lt;- strsplit(as.character(x[4]),&amp;quot;&amp;quot;)[[1]]
  min &amp;lt;- as.numeric(x[1])
  max &amp;lt;- as.numeric(x[2])
  letter &amp;lt;- as.character(x[3])
  if(string[min] == letter &amp;amp;&amp;amp; string[max]==letter){
    return(0)
  }else if(string[min] == letter || string[max]==letter){
    return(1)
  }else{
    return(0) 
  }
}

df3$valid &amp;lt;- apply(df3, 1, validPassword2)

sum(df3$valid) #part 2 solution
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day4/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day4/</guid>
      <description>&lt;p&gt;Today&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Challenge&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day4&#34;&gt;Day 4: Passport Processing&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
&lt;a id=&#39;day4&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-4-passport-processinghttpsadventofcodecom2020day4&#34;&gt;Day 4: 
&lt;a href=&#34;https://adventofcode.com/2020/day/4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Passport Processing&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day4/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 4 data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day4/exercise4.testinput.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 4 test data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1&#34;&gt;Part 1:&lt;/h2&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 1</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day1/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day1/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://adventofcode.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Advent of Code&lt;/a&gt; is an advent-style coding challenge, where there is a two-part coding/data challenge posted for each day in December until Christmas Day (December 1st to December 25th).&lt;/p&gt;
&lt;p&gt;I will be attempting each day using R (mostly), Python (sometimes), and MATLAB (rarely) &amp;ndash; which are my three mainstay languages for data science.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Challenge&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day1&#34;&gt;Day 1: Report Repair&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
&lt;a id=&#39;day1&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-1-report-repairhttpsadventofcodecom2020day1&#34;&gt;Day 1: 
&lt;a href=&#34;https://adventofcode.com/2020/day/1&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Report Repair&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day1/exercise1.input.txt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 1 data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1-two-numbers&#34;&gt;Part 1: Two numbers&lt;/h2&gt;
&lt;p&gt;The challenge was to find two numbers from a list that sum to 2020, then to report their product.&lt;/p&gt;
&lt;p&gt;At first, I wanted to solve this problem any which way, and I didn&amp;rsquo;t really care for time complexity. So my first solution was (incomplete code snippet):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xval&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;enumerate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;ar_y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[:&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:]&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yval&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;enumerate&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar_y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;xval&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;xval&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;yval&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;INPUT_PATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; 
	&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2020&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The above solution was of time complexity: O(n^2), which was not ideal.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;sorted&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# sort the list ar&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# min index&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#max index&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;minidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;maxidx&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;multiple&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This one (above) was of O(nlogn) time complexity with a space complexity of O(1).&lt;/p&gt;
&lt;p&gt;So how do I come up with a solution that&amp;rsquo;s both efficient in terms of time and space complexity? Two words&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;list-comprehensions&#34;&gt;List Comprehensions&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Thus, my complete code (and by complete, I mean &amp;ldquo;composable,&amp;rdquo; like my partner says&amp;hellip;. so it can be executed by anyone via the Terminal given you&amp;rsquo;ve set the input and output paths):&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/python3&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;math&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;


&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;OUTPUT_PATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;INPUT_PATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;What do you want your sum to be? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;part-2-three-numbers&#34;&gt;Part 2: Three numbers&lt;/h2&gt;
&lt;p&gt;The challenge was to find THREE numbers from a list that sum to 2020, then to report their product. We can take our previous solution and tweak it a little to add another variable.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;ch&#34;&gt;#!/bin/python3&lt;/span&gt;

&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;math&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;random&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;re&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;({(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;OUTPUT_PATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;with&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;os&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;environ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;INPUT_PATH&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;as&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ar_count&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()]&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;input&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;What do you want your sum to be? &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;aParticularSum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;fptr&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;I&amp;rsquo;ve completed all 25 challenges of Advent of Code. However, I am slow to put up my thought process throughout the whole thing. This blog will be updated as I code/work/blog through the rest of the challenges.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 10</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day10/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day10/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 11</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day11/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day11/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 12</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day12/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day12/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 13</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day13/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day13/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 14</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day14/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day14/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 15</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day15/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day15/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 16</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day16/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day16/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 17</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day17/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day17/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 18</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day18/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day18/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 19</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day19/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day19/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 20</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day20/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day20/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 21</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day21/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day21/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 22</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day22/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day22/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 23</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day23/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day23/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 24</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day24/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day24/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 25</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day25/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day25/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 3</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day3/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day3/</guid>
      <description>&lt;p&gt;Today&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Challenge&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#day3&#34;&gt;Day 3: Toboggan Trajectory&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;**&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;
&lt;a id=&#39;day1&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-3-toboggan-trajectoryhttpsadventofcodecom2020day3&#34;&gt;Day 3: 
&lt;a href=&#34;https://adventofcode.com/2020/day/3&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Toboggan Trajectory&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day3/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 3 data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1&#34;&gt;Part 1:&lt;/h2&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 5</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day5/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day5/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Challenge&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Status&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;/table&gt;
&lt;p&gt;| &lt;a href=&#34;#day5&#34;&gt;Day 5: Binary Boarding   |  **  |&lt;/p&gt;
&lt;p&gt;
&lt;a id=&#39;day5&#39;&gt;&lt;/a&gt;
&lt;/p&gt;
&lt;h2 id=&#34;day-5-binary-boardinghttpsadventofcodecom2020day5&#34;&gt;Day 5: 
&lt;a href=&#34;https://adventofcode.com/2020/day/5&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Binary Boarding&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;
&lt;a href=&#34;https://pritikadasgupta.github.io/post/advent-of-code-2020/data/Day5/input&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My day 5 data&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;part-1&#34;&gt;Part 1:&lt;/h2&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 6</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day6/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day6/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 7</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day7/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day7/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Advent of Code 2020 Day 8</title>
      <link>https://pritikadasgupta.github.io/post/advent-of-code-2020-day8/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://pritikadasgupta.github.io/post/advent-of-code-2020-day8/</guid>
      <description>&lt;p&gt;
&lt;a href=&#34;https://github.com/pritikadasgupta/adventofcode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My github repository&lt;/a&gt; contains my solutions to Advent of Code 2019-2020!&lt;/p&gt;
&lt;hr&gt;
</description>
    </item>
    
  </channel>
</rss>
